apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vintage-story-server
spec:
  serviceName: "vintage-story-server"
  replicas: 1
  selector:
    matchLabels:
      app: vintage-story-server
  template:
    metadata:
      labels:
        app: vintage-story-server
    spec:
      imagePullSecrets:
        - name: harbor-k3s
      initContainers:
      - name: init-chown-data
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /var/vintage_story"]
        volumeMounts:
        - name: vs-data
          mountPath: /var/vintage_story
      containers:
      - name: vintage-story-server
        image: vintage-story-server:latest  # You'll need to replace this with the actual image
        imagePullPolicy: Always
        ports:
        - name: vs-server
          containerPort: 42420
        envFrom:
        - configMapRef:
            name: vs-config
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        volumeMounts:
        - name: vs-data
          mountPath: /var/vintage_story
      - name: vintage-story-filebrowser
        image: filebrowser/filebrowser:latest
        imagePullPolicy: Always
        ports:
        - name: filebrowser
          containerPort: 80
        volumeMounts:
        - name: vs-data
          mountPath: /srv
        - name: filebrowser-db
          mountPath: /database
        - name: vs-config
          configMap:
            name: vs-config
            items:
            - key: filebrowser.json
          mountPath: /config/settings.json
  volumeClaimTemplates:
  - metadata:
      name: filebrowser-db
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi  # Adjust this value based on your needs
  - metadata:
      name: vs-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi  # Adjust this value based on your needs
